// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/belamov/ypgo-url-shortener/internal/app/services/crypto (interfaces: Cryptographer)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCryptographer is a mock of Cryptographer interface.
type MockCryptographer struct {
	ctrl     *gomock.Controller
	recorder *MockCryptographerMockRecorder
}

// MockCryptographerMockRecorder is the mock recorder for MockCryptographer.
type MockCryptographerMockRecorder struct {
	mock *MockCryptographer
}

// NewMockCryptographer creates a new mock instance.
func NewMockCryptographer(ctrl *gomock.Controller) *MockCryptographer {
	mock := &MockCryptographer{ctrl: ctrl}
	mock.recorder = &MockCryptographerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCryptographer) EXPECT() *MockCryptographerMockRecorder {
	return m.recorder
}

// Decrypt mocks base method.
func (m *MockCryptographer) Decrypt(arg0 []byte) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Decrypt", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Decrypt indicates an expected call of Decrypt.
func (mr *MockCryptographerMockRecorder) Decrypt(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Decrypt", reflect.TypeOf((*MockCryptographer)(nil).Decrypt), arg0)
}

// Encrypt mocks base method.
func (m *MockCryptographer) Encrypt(arg0 []byte) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Encrypt", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Encrypt indicates an expected call of Encrypt.
func (mr *MockCryptographerMockRecorder) Encrypt(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Encrypt", reflect.TypeOf((*MockCryptographer)(nil).Encrypt), arg0)
}
