// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/belamov/ypgo-url-shortener/internal/app/services (interfaces: IPCheckerInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIPCheckerInterface is a mock of IPCheckerInterface interface.
type MockIPCheckerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockIPCheckerInterfaceMockRecorder
}

// MockIPCheckerInterfaceMockRecorder is the mock recorder for MockIPCheckerInterface.
type MockIPCheckerInterfaceMockRecorder struct {
	mock *MockIPCheckerInterface
}

// NewMockIPCheckerInterface creates a new mock instance.
func NewMockIPCheckerInterface(ctrl *gomock.Controller) *MockIPCheckerInterface {
	mock := &MockIPCheckerInterface{ctrl: ctrl}
	mock.recorder = &MockIPCheckerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPCheckerInterface) EXPECT() *MockIPCheckerInterfaceMockRecorder {
	return m.recorder
}

// IsRequestFromTrustedSubnet mocks base method.
func (m *MockIPCheckerInterface) IsRequestFromTrustedSubnet(arg0 *http.Request) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsRequestFromTrustedSubnet", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IsRequestFromTrustedSubnet indicates an expected call of IsRequestFromTrustedSubnet.
func (mr *MockIPCheckerInterfaceMockRecorder) IsRequestFromTrustedSubnet(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsRequestFromTrustedSubnet", reflect.TypeOf((*MockIPCheckerInterface)(nil).IsRequestFromTrustedSubnet), arg0)
}
